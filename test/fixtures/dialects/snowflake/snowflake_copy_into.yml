# YML test files are auto-generated from SQL files and should not be edited by
# hand. To help enforce this, the "hash" field in the file must match a hash
# computed by SQLFluff when running the tests. Please run
# `python test/generate_parse_fixture_yml.py`  to generate them after adding or
# altering SQL files.
_hash: bc9590377cbae078da69ec5d7deaeb31cb8a916583eca1fa83daf6964f890e5f
file:
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
    - keyword: from
    - internal_external_stage:
        literal: '@'
        identifier: my_int_stage
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
    - keyword: from
    - internal_external_stage:
        literal: '@'
        identifier: my_int_stage
    - keyword: file_format
    - comparison_operator: '='
    - file_format_segment:
        bracketed:
          start_bracket: (
          keyword: type
          comparison_operator: '='
          file_type: csv
          end_bracket: )
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
    - keyword: from
    - internal_external_stage:
        literal: '@'
        identifier: my_int_stage
    - keyword: file_format
    - comparison_operator: '='
    - file_format_segment:
        bracketed:
          start_bracket: (
          keyword: format_name
          comparison_operator: '='
          literal: "'mycsv'"
          end_bracket: )
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
    - keyword: from
    - internal_external_stage:
        literal: '@'
        identifier: my_int_stage
    - keyword: file_format
    - comparison_operator: '='
    - file_format_segment:
        bracketed:
          start_bracket: (
          keyword: type
          comparison_operator: '='
          file_type: "'CSV'"
          end_bracket: )
    - keyword: pattern
    - comparison_operator: '='
    - literal: "'.*/.*/.*[.]csv[.]gz'"
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
    - keyword: from
    - internal_external_stage:
        literal: '@'
        identifier: my_int_stage
    - keyword: file_format
    - comparison_operator: '='
    - file_format_segment:
        bracketed:
          start_bracket: (
          keyword: format_name
          comparison_operator: '='
          identifier: myformat
          end_bracket: )
    - keyword: pattern
    - comparison_operator: '='
    - literal: "'.*sales.*[.]csv'"
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
    - identifier: purge
    - comparison_operator: '='
    - identifier: 'true'
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
    - identifier: validation_mode
    - comparison_operator: '='
    - literal: "'RETURN_ERRORS'"
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
    - identifier: validation_mode
    - comparison_operator: '='
    - literal: "'RETURN_2_ROWS'"
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable
    - identifier: validation_mode
    - comparison_operator: '='
    - literal: "'RETURN_3_ROWS'"
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: COPY
    - keyword: INTO
    - table_reference:
        identifier: target_table
    - keyword: FROM
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: SELECT
            select_clause_element:
              column_reference:
                identifier: $1
          from_clause:
            keyword: FROM
            from_expression:
              from_expression_element:
                table_expression:
                  internal_external_stage:
                    literal: '@'
                    identifier: source_stage
        end_bracket: )
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable1
    - bracketed:
        start_bracket: (
        column_reference:
          identifier: column1
        end_bracket: )
    - keyword: from
    - literal: "'s3://bucket/source'"
    - keyword: file_format
    - comparison_operator: '='
    - file_format_segment:
        bracketed:
          start_bracket: (
          keyword: TYPE
          comparison_operator: '='
          file_type: JSON
          end_bracket: )
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable1
    - keyword: from
    - bracketed:
        start_bracket: (
        select_statement:
          select_clause:
            keyword: select
            select_clause_element:
              column_reference:
                identifier: column1
          from_clause:
            keyword: from
            from_expression:
              from_expression_element:
                table_expression:
                  internal_external_stage:
                  - literal: '@'
                  - identifier: ext
                  - dot: .
                  - identifier: stage
                  - slash: /
                  - path:
                      identifier: path1
        end_bracket: )
    - keyword: file_format
    - comparison_operator: '='
    - file_format_segment:
        bracketed:
          start_bracket: (
          keyword: TYPE
          comparison_operator: '='
          file_type: JSON
          end_bracket: )
- statement_terminator: ;
- statement:
    copy_into_statement:
    - keyword: copy
    - keyword: into
    - table_reference:
        identifier: mytable1
    - keyword: from
    - literal: "'s3://bucket/source'"
    - keyword: file_format
    - comparison_operator: '='
    - file_format_segment:
        bracketed:
          start_bracket: (
          keyword: type
          comparison_operator: '='
          file_type: csv
          format_type_options_segment:
            identifier: SKIP_HEADER
            comparison_operator: '='
            literal: '1'
          end_bracket: )
- statement_terminator: ;
